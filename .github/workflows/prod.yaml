name: Prod deploy

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: Cache builder
        id: cache-builder
        uses: actions/cache@v3
        with:
          key: cache-builder
          path: |
            ~/.cargo
            target
            .dioxus

      - if: ${{ steps.cache-builder.outputs.cache-hit != 'true' }}
        name: Install dioxus-cli
        run: |
          cargo install dioxus-cli --version 0.6.0-alpha.2

      - name: Deploy APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENV: prod
          ACM_ID: ${{ secrets.AWS_HOMEPAGE_ACM_ID }}
          VPC_ID: ${{ secrets.AWS_VPC_ID }}
          SECURITY_GROUP_ID: ${{ secrets.AWS_SECURITY_GROUP_ID }}
          SUBNET1_ID: ${{ secrets.AWS_SUBNET1_ID }}
          SUBNET2_ID: ${{ secrets.AWS_SUBNET2_ID }}
          HOSTED_ZONE_ID: ${{ secrets.AWS_ROUTE53_BIYARD_CO }}
          CDN_ID: ${{ secrets.AWS_HOMEPAGE_PROD_CDN_ID }}
        run: |
          npm install -g aws-cdk tailwindcss
          make deploy
